# Equality has lowest precedence
# Every primary can also be derived as unary -> factor -> term -> comparison -> equality -> expression
expression     → equality ;

# Note: equality/comparison/term/factor are left associate
# A more intuitive way to cover the left associativity would be to define
# factor         → factor ( "/" | "*" ) unary
                 | unary ;
# But the problem with that is that it would be left-recursive
# Our parsing technique has a problem with left-recursion
comma          → equality ( "," equality )* ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary
               | primary ;
primary        → NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")" ;